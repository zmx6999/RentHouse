// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/example/example.proto

/*
Package go_micro_srv_house is a generated protocol buffer package.

It is generated from these files:
	proto/example/example.proto

It has these top-level messages:
	Message
	AddRequest
	AddResponse
	UploadImageRequest
	UploadImageResponse
	GetLandlordListRequest
	GetLandlordListResponse
	GetDescRequest
	GetDescResponse
	GetIndexListRequest
	GetIndexListResponse
	SearchRequest
	SearchResponse
*/
package go_micro_srv_house

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Example service

type ExampleService interface {
	Add(ctx context.Context, in *AddRequest, opts ...client.CallOption) (*AddResponse, error)
	UploadImage(ctx context.Context, in *UploadImageRequest, opts ...client.CallOption) (*UploadImageResponse, error)
	GetLandlordList(ctx context.Context, in *GetLandlordListRequest, opts ...client.CallOption) (*GetLandlordListResponse, error)
	GetDesc(ctx context.Context, in *GetDescRequest, opts ...client.CallOption) (*GetDescResponse, error)
	GetIndexList(ctx context.Context, in *GetIndexListRequest, opts ...client.CallOption) (*GetIndexListResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type exampleService struct {
	c    client.Client
	name string
}

func NewExampleService(name string, c client.Client) ExampleService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "go.micro.srv.house"
	}
	return &exampleService{
		c:    c,
		name: name,
	}
}

func (c *exampleService) Add(ctx context.Context, in *AddRequest, opts ...client.CallOption) (*AddResponse, error) {
	req := c.c.NewRequest(c.name, "Example.Add", in)
	out := new(AddResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) UploadImage(ctx context.Context, in *UploadImageRequest, opts ...client.CallOption) (*UploadImageResponse, error) {
	req := c.c.NewRequest(c.name, "Example.UploadImage", in)
	out := new(UploadImageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) GetLandlordList(ctx context.Context, in *GetLandlordListRequest, opts ...client.CallOption) (*GetLandlordListResponse, error) {
	req := c.c.NewRequest(c.name, "Example.GetLandlordList", in)
	out := new(GetLandlordListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) GetDesc(ctx context.Context, in *GetDescRequest, opts ...client.CallOption) (*GetDescResponse, error) {
	req := c.c.NewRequest(c.name, "Example.GetDesc", in)
	out := new(GetDescResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) GetIndexList(ctx context.Context, in *GetIndexListRequest, opts ...client.CallOption) (*GetIndexListResponse, error) {
	req := c.c.NewRequest(c.name, "Example.GetIndexList", in)
	out := new(GetIndexListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.name, "Example.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Example service

type ExampleHandler interface {
	Add(context.Context, *AddRequest, *AddResponse) error
	UploadImage(context.Context, *UploadImageRequest, *UploadImageResponse) error
	GetLandlordList(context.Context, *GetLandlordListRequest, *GetLandlordListResponse) error
	GetDesc(context.Context, *GetDescRequest, *GetDescResponse) error
	GetIndexList(context.Context, *GetIndexListRequest, *GetIndexListResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterExampleHandler(s server.Server, hdlr ExampleHandler, opts ...server.HandlerOption) error {
	type example interface {
		Add(ctx context.Context, in *AddRequest, out *AddResponse) error
		UploadImage(ctx context.Context, in *UploadImageRequest, out *UploadImageResponse) error
		GetLandlordList(ctx context.Context, in *GetLandlordListRequest, out *GetLandlordListResponse) error
		GetDesc(ctx context.Context, in *GetDescRequest, out *GetDescResponse) error
		GetIndexList(ctx context.Context, in *GetIndexListRequest, out *GetIndexListResponse) error
		Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error
	}
	type Example struct {
		example
	}
	h := &exampleHandler{hdlr}
	return s.Handle(s.NewHandler(&Example{h}, opts...))
}

type exampleHandler struct {
	ExampleHandler
}

func (h *exampleHandler) Add(ctx context.Context, in *AddRequest, out *AddResponse) error {
	return h.ExampleHandler.Add(ctx, in, out)
}

func (h *exampleHandler) UploadImage(ctx context.Context, in *UploadImageRequest, out *UploadImageResponse) error {
	return h.ExampleHandler.UploadImage(ctx, in, out)
}

func (h *exampleHandler) GetLandlordList(ctx context.Context, in *GetLandlordListRequest, out *GetLandlordListResponse) error {
	return h.ExampleHandler.GetLandlordList(ctx, in, out)
}

func (h *exampleHandler) GetDesc(ctx context.Context, in *GetDescRequest, out *GetDescResponse) error {
	return h.ExampleHandler.GetDesc(ctx, in, out)
}

func (h *exampleHandler) GetIndexList(ctx context.Context, in *GetIndexListRequest, out *GetIndexListResponse) error {
	return h.ExampleHandler.GetIndexList(ctx, in, out)
}

func (h *exampleHandler) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.ExampleHandler.Search(ctx, in, out)
}
