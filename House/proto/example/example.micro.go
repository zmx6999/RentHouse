// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/example/example.proto

/*
Package go_micro_srv_House is a generated protocol buffer package.

It is generated from these files:
	proto/example/example.proto

It has these top-level messages:
	Message
	AddHouseRequest
	AddHouseResponse
	GetUserHousesRequest
	GetUserHousesResponse
	UploadHouseImageRequest
	UploadHouseImageResponse
	GetHouseDetailRequest
	GetHouseDetailResponse
	GetIndexBannerRequest
	GetIndexBannerResponse
	SearchHouseRequest
	SearchHouseResponse
*/
package go_micro_srv_House

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Example service

type ExampleService interface {
	AddHouse(ctx context.Context, in *AddHouseRequest, opts ...client.CallOption) (*AddHouseResponse, error)
	GetUserHouses(ctx context.Context, in *GetUserHousesRequest, opts ...client.CallOption) (*GetUserHousesResponse, error)
	UploadHouseImage(ctx context.Context, in *UploadHouseImageRequest, opts ...client.CallOption) (*UploadHouseImageResponse, error)
	GetHouseDetail(ctx context.Context, in *GetHouseDetailRequest, opts ...client.CallOption) (*GetHouseDetailResponse, error)
	GetIndexBanner(ctx context.Context, in *GetIndexBannerRequest, opts ...client.CallOption) (*GetIndexBannerResponse, error)
	SearchHouse(ctx context.Context, in *SearchHouseRequest, opts ...client.CallOption) (*SearchHouseResponse, error)
}

type exampleService struct {
	c    client.Client
	name string
}

func NewExampleService(name string, c client.Client) ExampleService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "go.micro.srv.House"
	}
	return &exampleService{
		c:    c,
		name: name,
	}
}

func (c *exampleService) AddHouse(ctx context.Context, in *AddHouseRequest, opts ...client.CallOption) (*AddHouseResponse, error) {
	req := c.c.NewRequest(c.name, "Example.AddHouse", in)
	out := new(AddHouseResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) GetUserHouses(ctx context.Context, in *GetUserHousesRequest, opts ...client.CallOption) (*GetUserHousesResponse, error) {
	req := c.c.NewRequest(c.name, "Example.GetUserHouses", in)
	out := new(GetUserHousesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) UploadHouseImage(ctx context.Context, in *UploadHouseImageRequest, opts ...client.CallOption) (*UploadHouseImageResponse, error) {
	req := c.c.NewRequest(c.name, "Example.UploadHouseImage", in)
	out := new(UploadHouseImageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) GetHouseDetail(ctx context.Context, in *GetHouseDetailRequest, opts ...client.CallOption) (*GetHouseDetailResponse, error) {
	req := c.c.NewRequest(c.name, "Example.GetHouseDetail", in)
	out := new(GetHouseDetailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) GetIndexBanner(ctx context.Context, in *GetIndexBannerRequest, opts ...client.CallOption) (*GetIndexBannerResponse, error) {
	req := c.c.NewRequest(c.name, "Example.GetIndexBanner", in)
	out := new(GetIndexBannerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleService) SearchHouse(ctx context.Context, in *SearchHouseRequest, opts ...client.CallOption) (*SearchHouseResponse, error) {
	req := c.c.NewRequest(c.name, "Example.SearchHouse", in)
	out := new(SearchHouseResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Example service

type ExampleHandler interface {
	AddHouse(context.Context, *AddHouseRequest, *AddHouseResponse) error
	GetUserHouses(context.Context, *GetUserHousesRequest, *GetUserHousesResponse) error
	UploadHouseImage(context.Context, *UploadHouseImageRequest, *UploadHouseImageResponse) error
	GetHouseDetail(context.Context, *GetHouseDetailRequest, *GetHouseDetailResponse) error
	GetIndexBanner(context.Context, *GetIndexBannerRequest, *GetIndexBannerResponse) error
	SearchHouse(context.Context, *SearchHouseRequest, *SearchHouseResponse) error
}

func RegisterExampleHandler(s server.Server, hdlr ExampleHandler, opts ...server.HandlerOption) error {
	type example interface {
		AddHouse(ctx context.Context, in *AddHouseRequest, out *AddHouseResponse) error
		GetUserHouses(ctx context.Context, in *GetUserHousesRequest, out *GetUserHousesResponse) error
		UploadHouseImage(ctx context.Context, in *UploadHouseImageRequest, out *UploadHouseImageResponse) error
		GetHouseDetail(ctx context.Context, in *GetHouseDetailRequest, out *GetHouseDetailResponse) error
		GetIndexBanner(ctx context.Context, in *GetIndexBannerRequest, out *GetIndexBannerResponse) error
		SearchHouse(ctx context.Context, in *SearchHouseRequest, out *SearchHouseResponse) error
	}
	type Example struct {
		example
	}
	h := &exampleHandler{hdlr}
	return s.Handle(s.NewHandler(&Example{h}, opts...))
}

type exampleHandler struct {
	ExampleHandler
}

func (h *exampleHandler) AddHouse(ctx context.Context, in *AddHouseRequest, out *AddHouseResponse) error {
	return h.ExampleHandler.AddHouse(ctx, in, out)
}

func (h *exampleHandler) GetUserHouses(ctx context.Context, in *GetUserHousesRequest, out *GetUserHousesResponse) error {
	return h.ExampleHandler.GetUserHouses(ctx, in, out)
}

func (h *exampleHandler) UploadHouseImage(ctx context.Context, in *UploadHouseImageRequest, out *UploadHouseImageResponse) error {
	return h.ExampleHandler.UploadHouseImage(ctx, in, out)
}

func (h *exampleHandler) GetHouseDetail(ctx context.Context, in *GetHouseDetailRequest, out *GetHouseDetailResponse) error {
	return h.ExampleHandler.GetHouseDetail(ctx, in, out)
}

func (h *exampleHandler) GetIndexBanner(ctx context.Context, in *GetIndexBannerRequest, out *GetIndexBannerResponse) error {
	return h.ExampleHandler.GetIndexBanner(ctx, in, out)
}

func (h *exampleHandler) SearchHouse(ctx context.Context, in *SearchHouseRequest, out *SearchHouseResponse) error {
	return h.ExampleHandler.SearchHouse(ctx, in, out)
}
